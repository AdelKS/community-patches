diff --git a/src/amd/vulkan/radv_device.c b/src/amd/vulkan/radv_device.c
index f45d86bd3f72e5bb29e4bde1acec4cec8ee8fd4d..00d6aea1d1395d98c4433234e8311d28c28a2f56 100644
--- a/src/amd/vulkan/radv_device.c
+++ b/src/amd/vulkan/radv_device.c
@@ -1001,9 +1001,10 @@ void radv_GetPhysicalDeviceFeatures2(
 		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES: {
 			VkPhysicalDevice16BitStorageFeatures *features =
 			    (VkPhysicalDevice16BitStorageFeatures*)ext;
-			features->storageBuffer16BitAccess = !pdevice->use_aco;
-			features->uniformAndStorageBuffer16BitAccess = !pdevice->use_aco;
-			features->storagePushConstant16 = !pdevice->use_aco;
+			bool enabled = pdevice->rad_info.chip_class >= GFX8 || !pdevice->use_aco;
+			features->storageBuffer16BitAccess = enabled;
+			features->uniformAndStorageBuffer16BitAccess = enabled;
+			features->storagePushConstant16 = enabled;
 			features->storageInputOutput16 = pdevice->rad_info.has_double_rate_fp16 && !pdevice->use_aco && LLVM_VERSION_MAJOR >= 9;
 			break;
 		}
@@ -1102,9 +1103,10 @@ void radv_GetPhysicalDeviceFeatures2(
 		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES: {
 			VkPhysicalDevice8BitStorageFeatures *features =
 			    (VkPhysicalDevice8BitStorageFeatures *)ext;
-			features->storageBuffer8BitAccess = !pdevice->use_aco;
-			features->uniformAndStorageBuffer8BitAccess = !pdevice->use_aco;
-			features->storagePushConstant8 = !pdevice->use_aco;
+			bool enabled = pdevice->rad_info.chip_class >= GFX8 || !pdevice->use_aco;
+			features->storageBuffer8BitAccess = enabled;
+			features->uniformAndStorageBuffer8BitAccess = enabled;
+			features->storagePushConstant8 = enabled;
 			break;
 		}
 		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES: {
@@ -1219,9 +1221,9 @@ void radv_GetPhysicalDeviceFeatures2(
 		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES: {
 			VkPhysicalDeviceVulkan11Features *features =
 				(VkPhysicalDeviceVulkan11Features *)ext;
-			features->storageBuffer16BitAccess = !pdevice->use_aco;
-			features->uniformAndStorageBuffer16BitAccess = !pdevice->use_aco;
-			features->storagePushConstant16 = !pdevice->use_aco;
+			features->storageBuffer16BitAccess = pdevice->rad_info.chip_class >= GFX8 || !pdevice->use_aco;
+			features->uniformAndStorageBuffer16BitAccess = pdevice->rad_info.chip_class >= GFX8 || !pdevice->use_aco;
+			features->storagePushConstant16 = pdevice->rad_info.chip_class >= GFX8 || !pdevice->use_aco;
 			features->storageInputOutput16 = pdevice->rad_info.has_double_rate_fp16 && !pdevice->use_aco && LLVM_VERSION_MAJOR >= 9;
 			features->multiview = true;
 			features->multiviewGeometryShader = true;
@@ -1238,9 +1240,9 @@ void radv_GetPhysicalDeviceFeatures2(
 				(VkPhysicalDeviceVulkan12Features *)ext;
 			features->samplerMirrorClampToEdge = true;
 			features->drawIndirectCount = true;
-			features->storageBuffer8BitAccess = !pdevice->use_aco;
-			features->uniformAndStorageBuffer8BitAccess = !pdevice->use_aco;
-			features->storagePushConstant8 = !pdevice->use_aco;
+			features->storageBuffer8BitAccess = pdevice->rad_info.chip_class >= GFX8 || !pdevice->use_aco;
+			features->uniformAndStorageBuffer8BitAccess = pdevice->rad_info.chip_class >= GFX8 || !pdevice->use_aco;
+			features->storagePushConstant8 = pdevice->rad_info.chip_class >= GFX8 || !pdevice->use_aco;
 			features->shaderBufferInt64Atomics = LLVM_VERSION_MAJOR >= 9;
 			features->shaderSharedInt64Atomics = LLVM_VERSION_MAJOR >= 9;
 			features->shaderFloat16 = pdevice->rad_info.has_double_rate_fp16 && !pdevice->use_aco;
diff --git a/src/amd/vulkan/radv_extensions.py b/src/amd/vulkan/radv_extensions.py
index b2878333d669ed2925e4b941298b3e0ec30f4b26..24711db7a355fc280cf3434772094a09656c6ffb 100644
--- a/src/amd/vulkan/radv_extensions.py
+++ b/src/amd/vulkan/radv_extensions.py
@@ -52,7 +52,7 @@ class Extension:
 EXTENSIONS = [
     Extension('VK_ANDROID_external_memory_android_hardware_buffer', 3, 'RADV_SUPPORT_ANDROID_HARDWARE_BUFFER  && device->rad_info.has_syncobj_wait_for_submit'),
     Extension('VK_ANDROID_native_buffer',                 5, 'ANDROID && device->rad_info.has_syncobj_wait_for_submit'),
-    Extension('VK_KHR_16bit_storage',                     1, '!device->use_aco'),
+    Extension('VK_KHR_16bit_storage',                     1, '(!device->use_aco || device->rad_info.chip_class >= GFX8)'),
     Extension('VK_KHR_bind_memory2',                      1, True),
     Extension('VK_KHR_buffer_device_address',             1, True),
     Extension('VK_KHR_create_renderpass2',                1, True),
@@ -109,7 +109,7 @@ EXTENSIONS = [
     Extension('VK_KHR_xlib_surface',                      6, 'VK_USE_PLATFORM_XLIB_KHR'),
     Extension('VK_KHR_multiview',                         1, True),
     Extension('VK_KHR_display',                          23, 'VK_USE_PLATFORM_DISPLAY_KHR'),
-    Extension('VK_KHR_8bit_storage',                      1, '!device->use_aco'),
+    Extension('VK_KHR_8bit_storage',                      1, '(!device->use_aco || device->rad_info.chip_class >= GFX8)'),
     Extension('VK_EXT_direct_mode_display',               1, 'VK_USE_PLATFORM_DISPLAY_KHR'),
     Extension('VK_EXT_acquire_xlib_display',              1, 'VK_USE_PLATFORM_XLIB_XRANDR_EXT'),
     Extension('VK_EXT_buffer_device_address',             1, True),
diff --git a/src/amd/vulkan/radv_shader.c b/src/amd/vulkan/radv_shader.c
index a46691229f514b50e1838a8694f424bbf1a4f9c0..8c21e0718aa32cdc40b559ae9c1b77aadc861986 100644
--- a/src/amd/vulkan/radv_shader.c
+++ b/src/amd/vulkan/radv_shader.c
@@ -367,8 +367,8 @@ radv_shader_compile_to_nir(struct radv_device *device,
 				.shader_clock = true,
 				.shader_viewport_index_layer = true,
 				.stencil_export = true,
-				.storage_8bit = !device->physical_device->use_aco,
-				.storage_16bit = !device->physical_device->use_aco,
+				.storage_8bit = true,
+				.storage_16bit = true,
 				.storage_image_ms = true,
 				.subgroup_arithmetic = true,
 				.subgroup_ballot = true,
 
diff --git a/src/amd/vulkan/radv_device.c b/src/amd/vulkan/radv_device.c
index 00d6aea1d1395d98c4433234e8311d28c28a2f56..5a56153ca49c206b1f4b9f238af441519f710533 100644
--- a/src/amd/vulkan/radv_device.c
+++ b/src/amd/vulkan/radv_device.c
@@ -1113,7 +1113,7 @@ void radv_GetPhysicalDeviceFeatures2(
 			VkPhysicalDeviceShaderFloat16Int8Features *features =
 				(VkPhysicalDeviceShaderFloat16Int8Features*)ext;
 			features->shaderFloat16 = pdevice->rad_info.has_double_rate_fp16 && !pdevice->use_aco;
-			features->shaderInt8 = !pdevice->use_aco;
+			features->shaderInt8 = true;
 			break;
 		}
 		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES: {
diff --git a/src/amd/vulkan/radv_extensions.py b/src/amd/vulkan/radv_extensions.py
index 24711db7a355fc280cf3434772094a09656c6ffb..6a2a143e4bbbfc39d907321c51bc4e4a4fe2b594 100644
--- a/src/amd/vulkan/radv_extensions.py
+++ b/src/amd/vulkan/radv_extensions.py
@@ -92,7 +92,7 @@ EXTENSIONS = [
     Extension('VK_KHR_shader_clock',                      1, True),
     Extension('VK_KHR_shader_draw_parameters',            1, True),
     Extension('VK_KHR_shader_float_controls',             1, True),
-    Extension('VK_KHR_shader_float16_int8',               1, '!device->use_aco'),
+    Extension('VK_KHR_shader_float16_int8',               1, True),
     Extension('VK_KHR_shader_non_semantic_info',          1, True),
     Extension('VK_KHR_shader_subgroup_extended_types',    1, True),
     Extension('VK_KHR_spirv_1_4',                         1, True),
